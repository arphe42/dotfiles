# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  # System disk
  fileSystems."/" =
    { device = "/dev/disk/by-uuid/334450ee-3716-4ee1-a108-83775b6a2153";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/A675-BB83";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/da70ac3b-9578-46a4-ac6c-7ef705db00e9"; }
    ];

  # Truenas
  # fileSystems."/home/raphael/Storage/Truenas" =
  #   { device = "truenas.local:/mnt/SplishSplash/raphael";
  #     fsType = "nfs";
  #     options = [ "x-systemd.automount" "noauto" "x-systemd.idle-timeout=600" ];
  #   };

  fileSystems."/home/raphael/Storage/Truenas" = 
    { device = "//truenas.local/raphael";
      fsType = "cifs";
      options = let
        # this line prevents hanging on network split
        automount_opts = "x-systemd.automount,noauto,x-systemd.idle-timeout=60,x-systemd.device-timeout=5s,x-systemd.mount-timeout=5s";

      in ["${automount_opts},credentials=/home/raphael/.config/samba/smb-secrets,uid=1000,gid=1000"];
    };


  # fileSystems."/home/raphael/Storage/Emulation" =
  #   { device = "truenas:/mnt/SplishSplash/Emulation";
  #     fsType = "nfs";
  #     options = [ "x-systemd.automount" "noauto" "x-systemd.idle-timeout=600" ];
  #   };

  fileSystems."/home/raphael/Storage/Emulation" =
    { device = "//truenas.local/Emulation";
      fsType = "cifs";
      options = let
        # this line prevents hanging on network split
        automount_opts = "x-systemd.automount,noauto,x-systemd.idle-timeout=60,x-systemd.device-timeout=5s,x-systemd.mount-timeout=5s";

      in ["${automount_opts},credentials=/home/raphael/.config/samba/smb-secrets,uid=1000,gid=1000"];
    };

  fileSystems."/home/raphael/Storage/Media" = 
    { device = "//truenas.local/Media";
      fsType = "cifs";
      options = let
        # this line prevents hanging on network split
        automount_opts = "x-systemd.automount,noauto,x-systemd.idle-timeout=60,x-systemd.device-timeout=5s,x-systemd.mount-timeout=5s";

      in ["${automount_opts},credentials=/home/raphael/.config/samba/smb-secrets,uid=1000,gid=1000"];
    };

  # Game 2Tb ssd nvme
  fileSystems."/home/raphael/Storage/Game" =
    { device = "/dev/disk/by-uuid/573a472b-7ce7-4567-b4a6-66ab64d645c3";
      fsType = "ext4";
    };
  # Game 1Tb ssd nvme
  #fileSystems."/home/raphael/Storage/Game" =
  #  { device = "/dev/disk/by-uuid/2ff7f83c-0127-442d-88f5-13fa65911e8f";
  #    fsType = "ext4";
  #  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp36s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
